plotRenalDataBars(stats_list, "Conventional CT Renal Elimination", "Signal_HU", "Hounsfield Units (HU)", y_breaks = c(100, 200, 300, 400 ,500, 600))
# Example usage:
stats_list <- list(dotarem_cortex_stats, dotarem_medulla_stats)
#plotRenalDataBars(stats_list, "Gd K-edge Renal Elimination", "Signal_Kedge", "[Gd] (mg/mL)", y_breaks = c(1:10) )
plotRenalDataBars(stats_list, "Conventional CT Renal Elimination", "Signal_HU", "Hounsfield Units (HU)", y_breaks = c(100, 200, 300, 400 ,500, 600))
#plotRenalDataBars(stats_list, "Gd K-edge Renal Elimination", "Signal_Kedge", "[Gd] (mg/mL)", y_breaks = c(1:10) )
plotRenalDataBars(stats_list, "Conventional CT Renal Elimination", "Signal_HU", "Hounsfield Units (HU)", y_breaks = c(100, 150, 300, 400 ,500, 600))
#plotRenalDataBars(stats_list, "Gd K-edge Renal Elimination", "Signal_Kedge", "[Gd] (mg/mL)", y_breaks = c(1:10) )
plotRenalDataBars(stats_list, "Conventional CT Renal Elimination", "Signal_HU", "Hounsfield Units (HU)", y_breaks = c(100, 150, 200, 250 ,500, 600))
# Example usage:
stats_list <- list(aguix_cortex_stats, aguix_medulla_stats)
#plotRenalDataBars(stats_list, "Gd K-edge Renal Elimination", "Signal_Kedge", "[Gd] (mg/mL)", y_breaks = c(1:10) )
plotRenalDataBars(stats_list, "Conventional CT Renal Elimination", "Signal_HU", "Hounsfield Units (HU)", y_breaks = c(100, 150, 200, 250 ,500, 600))
# Create a data frame for plotting intra-renal feature contrast differences
data_diff <- data.frame(
Timepoint = factor(rep(c("0.5", "1", "3", "10"), 4), levels = c("0.5", "1", "3", "10")),
Difference = c(aguix, dotarem),
Comparison = factor(rep(c("AGuIX", "Dotarem"), each = 4))
)
aguix <- aguix_cortex_stats$averages$Signal_HU
medulla <- dotarem_cortex_stats$averages$Signal_HU
# Create a data frame for plotting intra-renal feature contrast differences
data_diff <- data.frame(
Timepoint = factor(rep(c("0.5", "1", "3", "10"), 4), levels = c("0.5", "1", "3", "10")),
Difference = c(aguix, dotarem),
Comparison = factor(rep(c("AGuIX", "Dotarem"), each = 4))
)
dotarem <- dotarem_cortex_stats$averages$Signal_HU
# Create a data frame for plotting intra-renal feature contrast differences
data_diff <- data.frame(
Timepoint = factor(rep(c("0.5", "1", "3", "10"), 4), levels = c("0.5", "1", "3", "10")),
Difference = c(aguix, dotarem),
Comparison = factor(rep(c("AGuIX", "Dotarem"), each = 4))
)
# Create the bar plot
# Continue with the adjusted ggplot code
ggplot(data_diff, aes(x = Timepoint, y = Difference, fill = Comparison)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.6) +
labs(x = "Time (min)", y = expression(Delta * " Signal HU"), title = "Difference in Signal Between Pelvis & Medulla") +
theme_minimal() +
# Customize the colors manually for each comparison group
scale_fill_manual(values = c("AGuIX" = "darkgreen", "Dotarem" = "lightgreen")) +
theme(
plot.title = element_text(hjust = 0.5, size = 24),
legend.title = element_blank(),
axis.line = element_line(color="black", size = 1),
axis.title = element_text(size = 32),
axis.text = element_text(size = 24),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank()   # Remove minor grid lines
) +
# Adjust y-axis ticks: specify the range and intervals of ticks
scale_y_continuous(breaks = seq(from = -50, to = 200, by = 20))
# Create a data frame for plotting intra-renal feature contrast differences
data_diff <- data.frame(
Timepoint = factor(rep(c("0.5", "1", "3", "10"), 4), levels = c("0.5", "1", "3", "10")),
Difference = c(aguix, dotarem),
Comparison = factor(rep(c("AGuIX", "Dotarem"), each = 4))
)
dotarem <- dotarem_cortex_stats$averages$Signal_HU[1:4]
# Create a data frame for plotting intra-renal feature contrast differences
data_diff <- data.frame(
Timepoint = factor(rep(c("0.5", "1", "3", "10"), 4), levels = c("0.5", "1", "3", "10")),
Difference = c(aguix, dotarem),
Comparison = factor(rep(c("AGuIX", "Dotarem"), each = 4))
)
aguix <- aguix_cortex_stats$averages$Signal_HU
dotarem <- dotarem_cortex_stats$averages$Signal_HU
dotarem <- dotarem_cortex_stats$averages$Signal_HU[1:4]
aguix <- aguix_cortex_stats$averages$Signal_HU
dotarem <- dotarem_cortex_stats$averages$Signal_HU[1:4]
# Create a data frame for plotting intra-renal feature contrast differences
data_diff <- data.frame(
Timepoint = factor(rep(c("0.5", "1", "3", "10"), 4), levels = c("0.5", "1", "3", "10")),
Difference = c(aguix, dotarem),
Comparison = factor(rep(c("AGuIX", "Dotarem"), each = 4))
)
# Create a data frame for plotting intra-renal feature contrast differences
data_diff <- data.frame(
Timepoint = factor(rep(c("0.11", "0.5", "1", "3", "10"), 4), levels = c("0.11","0.5", "1", "3", "10")),
Difference = c(aguix, dotarem),
Comparison = factor(rep(c("AGuIX", "Dotarem"), each = 4))
)
plotRenalDataBars <- function(stats_list, title, data, ylab, y_breaks) {
# Assuming Time Points are consistent across datasets
time_points <- c(0.11, 0.5, 1, 3, 10) # Adjust if your time points are different
renal_areas <- c("AGuIX", "Dotarem")
# Prepare data for plotting
plot_data <- data.frame(TimePoint = rep(time_points, times = length(renal_areas)),
Signal = unlist(lapply(stats_list, function(x) x$averages[[data]])),
SD = unlist(lapply(stats_list, function(x) x$std_devs[[data]])),
RenalArea = rep(renal_areas, each = length(time_points)))
# Convert TimePoint to a factor to have discrete bars
plot_data$TimePoint <- factor(plot_data$TimePoint, levels = as.character(time_points))
gg <- ggplot(plot_data, aes(x = TimePoint, y = Signal, fill = RenalArea)) +
#geom_bar(stat = "identity", position = position_dodge(width = 0.7), width = 0.6) +
#geom_errorbar(aes(ymin = Signal - SD, ymax = Signal + SD), width = 0.2, position = position_dodge(width = 0.7)) +
scale_fill_manual(values = c("Cortex" = "purple", "Medulla" = "orange", "Pelvis" = "lightgreen")) +
labs(title = title, x = "Time (min)", y = ylab) +
scale_y_continuous(expand = expansion(mult = c(0.003, 0.006)), breaks = y_breaks) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5, size = 24),
legend.title = element_blank(),
axis.line = element_line(color="black", size = 1),
axis.line.x = element_line(color = "black", size = 1),
axis.line.y = element_line(color = "black", size = 1),
axis.ticks = element_line(color = "black"), axis.title = element_text(size = 32),
panel.border = element_blank(),
axis.title.y = element_text(size = 24, margin = margin(r = 20)),
axis.title.x = element_text(size = 24, margin = margin(t = 20)),
panel.background = element_rect(fill = "white"), axis.text.x = element_text(size = 24),
axis.text = element_text(size = 24, margin = margin(r = 20), face = "bold" )
) +
geom_vline(xintercept = c(2.5, 4.5), linetype = "dotted", color = "black") # Vertical dotted lines
# Print the plot
print(gg)
}
# Example usage:
stats_list <- list(aguix_cortex_stats, adotarem_medulla_stats)
# Example usage:
stats_list <- list(aguix_cortex_stats, dotarem_medulla_stats)
#plotRenalDataBars(stats_list, "Gd K-edge Renal Elimination", "Signal_Kedge", "[Gd] (mg/mL)", y_breaks = c(1:10) )
plotRenalDataBars(stats_list, "Cortex Enhancement", "Signal_HU", "Hounsfield Units (HU)", y_breaks = c(100, 150, 200, 250 ,500, 600))
plotRenalDataBars <- function(stats_list, title, data, ylab, y_breaks) {
# Assuming Time Points are consistent across datasets
time_points <- c(0.11, 0.5, 1, 3, 10) # Adjust if your time points are different
renal_areas <- c("AGuIX", "Dotarem")
# Prepare data for plotting
plot_data <- data.frame(TimePoint = rep(time_points, times = length(renal_areas)),
Signal = unlist(lapply(stats_list, function(x) x$averages[[data]])),
SD = unlist(lapply(stats_list, function(x) x$std_devs[[data]])),
RenalArea = rep(renal_areas, each = length(time_points)))
# Convert TimePoint to a factor to have discrete bars
plot_data$TimePoint <- factor(plot_data$TimePoint, levels = as.character(time_points))
gg <- ggplot(plot_data, aes(x = TimePoint, y = Signal, fill = RenalArea)) +
#geom_bar(stat = "identity", position = position_dodge(width = 0.7), width = 0.6) +
#geom_errorbar(aes(ymin = Signal - SD, ymax = Signal + SD), width = 0.2, position = position_dodge(width = 0.7)) +
scale_fill_manual(values = c("Cortex" = "purple", "Medulla" = "orange", "Pelvis" = "lightgreen", "AGuIX" = "lightblue", "Dotarem" = "gold")) +
labs(title = title, x = "Time (min)", y = ylab) +
scale_y_continuous(expand = expansion(mult = c(0.003, 0.006)), breaks = y_breaks) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5, size = 24),
legend.title = element_blank(),
axis.line = element_line(color="black", size = 1),
axis.line.x = element_line(color = "black", size = 1),
axis.line.y = element_line(color = "black", size = 1),
axis.ticks = element_line(color = "black"), axis.title = element_text(size = 32),
panel.border = element_blank(),
axis.title.y = element_text(size = 24, margin = margin(r = 20)),
axis.title.x = element_text(size = 24, margin = margin(t = 20)),
panel.background = element_rect(fill = "white"), axis.text.x = element_text(size = 24),
axis.text = element_text(size = 24, margin = margin(r = 20), face = "bold" )
) +
geom_vline(xintercept = c(2.5, 4.5), linetype = "dotted", color = "black") # Vertical dotted lines
# Print the plot
print(gg)
}
# Example usage:
stats_list <- list(aguix_cortex_stats, dotarem_medulla_stats)
#plotRenalDataBars(stats_list, "Gd K-edge Renal Elimination", "Signal_Kedge", "[Gd] (mg/mL)", y_breaks = c(1:10) )
plotRenalDataBars(stats_list, "Cortex Enhancement", "Signal_HU", "Hounsfield Units (HU)", y_breaks = c(100, 150, 200, 250 ,500, 600))
plotRenalDataBars <- function(stats_list, title, data, ylab, y_breaks) {
# Assuming Time Points are consistent across datasets
time_points <- c(0.11, 0.5, 1, 3, 10) # Adjust if your time points are different
renal_areas <- c("AGuIX", "Dotarem")
# Prepare data for plotting
plot_data <- data.frame(TimePoint = rep(time_points, times = length(renal_areas)),
Signal = unlist(lapply(stats_list, function(x) x$averages[[data]])),
SD = unlist(lapply(stats_list, function(x) x$std_devs[[data]])),
RenalArea = rep(renal_areas, each = length(time_points)))
# Convert TimePoint to a factor to have discrete bars
plot_data$TimePoint <- factor(plot_data$TimePoint, levels = as.character(time_points))
gg <- ggplot(plot_data, aes(x = TimePoint, y = Signal, fill = RenalArea)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.7), width = 0.6) +
geom_errorbar(aes(ymin = Signal - SD, ymax = Signal + SD), width = 0.2, position = position_dodge(width = 0.7)) +
scale_fill_manual(values = c("Cortex" = "purple", "Medulla" = "orange", "Pelvis" = "lightgreen", "AGuIX" = "lightblue", "Dotarem" = "gold")) +
labs(title = title, x = "Time (min)", y = ylab) +
scale_y_continuous(expand = expansion(mult = c(0.003, 0.006)), breaks = y_breaks) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5, size = 24),
legend.title = element_blank(),
axis.line = element_line(color="black", size = 1),
axis.line.x = element_line(color = "black", size = 1),
axis.line.y = element_line(color = "black", size = 1),
axis.ticks = element_line(color = "black"), axis.title = element_text(size = 32),
panel.border = element_blank(),
axis.title.y = element_text(size = 24, margin = margin(r = 20)),
axis.title.x = element_text(size = 24, margin = margin(t = 20)),
panel.background = element_rect(fill = "white"), axis.text.x = element_text(size = 24),
axis.text = element_text(size = 24, margin = margin(r = 20), face = "bold" )
) +
geom_vline(xintercept = c(2.5, 4.5), linetype = "dotted", color = "black") # Vertical dotted lines
# Print the plot
print(gg)
}
# Example usage:
stats_list <- list(aguix_cortex_stats, dotarem_medulla_stats)
#plotRenalDataBars(stats_list, "Gd K-edge Renal Elimination", "Signal_Kedge", "[Gd] (mg/mL)", y_breaks = c(1:10) )
plotRenalDataBars(stats_list, "Cortex Enhancement", "Signal_HU", "Hounsfield Units (HU)", y_breaks = c(100, 150, 200, 250 ,500, 600))
plotRenalDataBars <- function(stats_list, title, data, ylab, y_breaks) {
# Assuming Time Points are consistent across datasets
time_points <- c(0.11, 0.5, 1, 3, 10) # Adjust if your time points are different
renal_areas <- c("AGuIX", "Dotarem")
# Prepare data for plotting
plot_data <- data.frame(TimePoint = rep(time_points, times = length(renal_areas)),
Signal = unlist(lapply(stats_list, function(x) x$averages[[data]])),
SD = unlist(lapply(stats_list, function(x) x$std_devs[[data]])),
RenalArea = rep(renal_areas, each = length(time_points)))
# Convert TimePoint to a factor to have discrete bars
plot_data$TimePoint <- factor(plot_data$TimePoint, levels = as.character(time_points))
gg <- ggplot(plot_data, aes(x = TimePoint, y = Signal, fill = RenalArea)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.7), width = 0.6) +
#geom_errorbar(aes(ymin = Signal - SD, ymax = Signal + SD), width = 0.2, position = position_dodge(width = 0.7)) +
scale_fill_manual(values = c("Cortex" = "purple", "Medulla" = "orange", "Pelvis" = "lightgreen", "AGuIX" = "lightblue", "Dotarem" = "gold")) +
labs(title = title, x = "Time (min)", y = ylab) +
scale_y_continuous(expand = expansion(mult = c(0.003, 0.006)), breaks = y_breaks) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5, size = 24),
legend.title = element_blank(),
axis.line = element_line(color="black", size = 1),
axis.line.x = element_line(color = "black", size = 1),
axis.line.y = element_line(color = "black", size = 1),
axis.ticks = element_line(color = "black"), axis.title = element_text(size = 32),
panel.border = element_blank(),
axis.title.y = element_text(size = 24, margin = margin(r = 20)),
axis.title.x = element_text(size = 24, margin = margin(t = 20)),
panel.background = element_rect(fill = "white"), axis.text.x = element_text(size = 24),
axis.text = element_text(size = 24, margin = margin(r = 20), face = "bold" )
) +
geom_vline(xintercept = c(2.5, 4.5), linetype = "dotted", color = "black") # Vertical dotted lines
# Print the plot
print(gg)
}
# Example usage:
stats_list <- list(aguix_cortex_stats, dotarem_medulla_stats)
#plotRenalDataBars(stats_list, "Gd K-edge Renal Elimination", "Signal_Kedge", "[Gd] (mg/mL)", y_breaks = c(1:10) )
plotRenalDataBars(stats_list, "Cortex Enhancement", "Signal_HU", "Hounsfield Units (HU)", y_breaks = c(100, 150, 200, 250 ,500, 600))
#plotRenalDataBars(stats_list, "Gd K-edge Renal Elimination", "Signal_Kedge", "[Gd] (mg/mL)", y_breaks = c(1:10) )
plotRenalDataBars(stats_list, "Cortex Enhancement", "Signal_HU", "Hounsfield Units (HU)", y_breaks = c(50,100, 150, 200, 250 ,500, 600))
# Example usage:
stats_list <- list(aguix_cortex_stats, dotarem_cortex_stats)
#plotRenalDataBars(stats_list, "Gd K-edge Renal Elimination", "Signal_Kedge", "[Gd] (mg/mL)", y_breaks = c(1:10) )
plotRenalDataBars(stats_list, "Medulla Enhancement", "Signal_HU", "Hounsfield Units (HU)", y_breaks = c(50,100, 150, 200, 250 ,500, 600))
#plotRenalDataBars(stats_list, "Gd K-edge Renal Elimination", "Signal_Kedge", "[Gd] (mg/mL)", y_breaks = c(1:10) )
plotRenalDataBars(stats_list, "Cortex Enhancement", "Signal_HU", "Hounsfield Units (HU)", y_breaks = c(50,100, 150, 200, 250 ,500, 600))
# Example usage:
stats_list <- list(aguix_medulla_stats, dotarem_medulla_stats)
#plotRenalDataBars(stats_list, "Gd K-edge Renal Elimination", "Signal_Kedge", "[Gd] (mg/mL)", y_breaks = c(1:10) )
plotRenalDataBars(stats_list, "Medulla Enhancement", "Signal_HU", "Hounsfield Units (HU)", y_breaks = c(50,100, 150, 200, 250 ,500, 600))
generateAngioBarsWithError <- function(stats_list, column_name, title, x_label, y_label, y_breaks) {
# Assuming Time Points are consistent across datasets
time_points <- factor(c(0.11, 0.5, 1, 3, 10)) # Convert to factor for discrete axis
#vessel_names <- c("SAA", "IRA", "IVC", "IRVC")
vessel_names <- c("AGuIX", "Dotarem")
colors <- c("SAA" = "red", "IRA" = "pink", "IVC" = "blue", "IRVC" = "lightblue","AGuIX" = "lightblue", "Dotarem" = "gold")
# Prepare data for plotting
plot_data <- expand.grid(TimePoint = time_points, Vessel = vessel_names)
plot_data$Signal <- unlist(lapply(stats_list, function(x) x$averages[[column_name]]))
plot_data$SD <- unlist(lapply(stats_list, function(x) x$std_devs[[column_name]]))
gg <- ggplot(plot_data, aes(x = TimePoint, y = Signal, fill = Vessel, group = Vessel)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.7), width = 0.6) +
#geom_errorbar(aes(ymin = pmax(Signal - SD, 0), ymax = Signal + SD), width = 0.2, position = position_dodge(width = 0.7)) +
scale_fill_manual(values = colors) +
labs(title = title, x = x_label, y = y_label) +
scale_y_continuous(expand = expansion(mult = c(0.003, 0.006)), breaks = y_breaks) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5, size = 24),
legend.title = element_blank(),
axis.line = element_line(color="black", size = 1),
axis.line.x = element_line(color = "black", size = 1),
axis.line.y = element_line(color = "black", size = 1),
axis.ticks = element_line(color = "black"), axis.title = element_text(size = 24),
panel.border = element_blank(),
axis.title.y = element_text(size = 24, margin = margin(r = 20)),
axis.title.x = element_text(size = 24, margin = margin(t = 20)),
panel.background = element_rect(fill = "white"), axis.text.x = element_text(size = 24),
axis.text = element_text(size = 24, margin = margin(r = 20), face = "bold" )
)+
scale_x_discrete(name = x_label) +
geom_vline(xintercept = c(2.5, 4.5), linetype = "dotted", color = "black") # Vertical dotted lines
# Print the plot
print(gg)
}
# Example usage
stats_list <- list(aguix_IRA_stats, dotarem_IRA_stats)
generateAngioBarsWithError(stats_list, "Signal_HU", "Infrarenal Aorta", "Time (min)", "Hounsfield Units (HU)",  y_breaks = c(100, 200, 300, 400 ,500, 600))
generateAngioBarsWithError(stats_list, "Signal_HU", "Infrarenal Aorta", "Time (min)", "Hounsfield Units (HU)",  y_breaks = c(50, 75, 100, 200, 300, 400 ,500, 600))
generateAngioBarsWithError(stats_list, "Signal_HU", "Infrarenal Aorta", "Time (min)", "Hounsfield Units (HU)",  y_breaks = c(50, 75, 100, 400 ,500, 600))
# Example usage
stats_list <- list(aguix_IVC_stats, dotarem_IVC_stats)
generateAngioBarsWithError(stats_list, "Signal_HU", "Inferior Vena Cava Enhancement", "Time (min)", "Hounsfield Units (HU)",  y_breaks = c(50, 75, 100, 400 ,500, 600))
generateAngioBarsWithError(stats_list, "Signal_HU", "SAA Enhancement", "Time (min)", "Hounsfield Units (HU)",  y_breaks = c(50, 75, 100, 400 ,500, 600))
generateAngioBarsWithError <- function(stats_list, column_name, title, x_label, y_label, y_breaks) {
# Assuming Time Points are consistent across datasets
time_points <- factor(c(0.11, 0.5, 1, 3, 10)) # Convert to factor for discrete axis
#vessel_names <- c("SAA", "IRA", "IVC", "IRVC")
vessel_names <- c("AGuIX", "Dotarem")
colors <- c("SAA" = "red", "IRA" = "pink", "IVC" = "blue", "IRVC" = "lightblue","AGuIX" = "lightblue", "Dotarem" = "gold")
# Prepare data for plotting
plot_data <- expand.grid(TimePoint = time_points, Vessel = vessel_names)
plot_data$Signal <- unlist(lapply(stats_list, function(x) x$averages[[column_name]]))
plot_data$SD <- unlist(lapply(stats_list, function(x) x$std_devs[[column_name]]))
gg <- ggplot(plot_data, aes(x = TimePoint, y = Signal, fill = Vessel, group = Vessel)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.7), width = 0.6) +
geom_errorbar(aes(ymin = pmax(Signal - SD, 0), ymax = Signal + SD), width = 0.2, position = position_dodge(width = 0.7)) +
scale_fill_manual(values = colors) +
labs(title = title, x = x_label, y = y_label) +
scale_y_continuous(expand = expansion(mult = c(0.003, 0.006)), breaks = y_breaks) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5, size = 24),
legend.title = element_blank(),
axis.line = element_line(color="black", size = 1),
axis.line.x = element_line(color = "black", size = 1),
axis.line.y = element_line(color = "black", size = 1),
axis.ticks = element_line(color = "black"), axis.title = element_text(size = 24),
panel.border = element_blank(),
axis.title.y = element_text(size = 24, margin = margin(r = 20)),
axis.title.x = element_text(size = 24, margin = margin(t = 20)),
panel.background = element_rect(fill = "white"), axis.text.x = element_text(size = 24),
axis.text = element_text(size = 24, margin = margin(r = 20), face = "bold" )
)+
scale_x_discrete(name = x_label) +
geom_vline(xintercept = c(2.5, 4.5), linetype = "dotted", color = "black") # Vertical dotted lines
# Print the plot
print(gg)
}
# Example usage
stats_list <- list(aguix_SAA_stats, dotarem_SAA_stats)
generateAngioBarsWithError(stats_list, "Signal_HU", "SAA Enhancement", "Time (min)", "Hounsfield Units (HU)",  y_breaks = c(50, 75, 100, 400 ,500, 600))
# Example usage
stats_list <- list(aguix_SAA_stats, dotarem_SAA_stats)
generateAngioBarsWithError(stats_list, "Signal_HU", "SAA Enhancement", "Time (min)", "Hounsfield Units (HU)",  y_breaks = c(50, 75, 100, 400 ,500, 600))
# Example usage
stats_list <- list(aguix_IRA_stats, dotarem_IRA_stats)
generateAngioBarsWithError(stats_list, "Signal_HU", "SAA Enhancement", "Time (min)", "Hounsfield Units (HU)",  y_breaks = c(50, 75, 100, 400 ,500, 600))
generateAngioBarsWithError <- function(stats_list, column_name, title, x_label, y_label, y_breaks) {
# Assuming Time Points are consistent across datasets
time_points <- factor(c(0.11, 0.5, 1, 3, 10)) # Convert to factor for discrete axis
#vessel_names <- c("SAA", "IRA", "IVC", "IRVC")
vessel_names <- c("AGuIX", "Dotarem")
colors <- c("SAA" = "red", "IRA" = "pink", "IVC" = "blue", "IRVC" = "lightblue","AGuIX" = "lightblue", "Dotarem" = "gold")
# Prepare data for plotting
plot_data <- expand.grid(TimePoint = time_points, Vessel = vessel_names)
plot_data$Signal <- unlist(lapply(stats_list, function(x) x$averages[[column_name]]))
plot_data$SD <- unlist(lapply(stats_list, function(x) x$std_devs[[column_name]]))
gg <- ggplot(plot_data, aes(x = TimePoint, y = Signal, fill = Vessel, group = Vessel)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.7), width = 0.6) +
#geom_errorbar(aes(ymin = pmax(Signal - SD, 0), ymax = Signal + SD), width = 0.2, position = position_dodge(width = 0.7)) +
scale_fill_manual(values = colors) +
labs(title = title, x = x_label, y = y_label) +
scale_y_continuous(expand = expansion(mult = c(0.003, 0.006)), breaks = y_breaks) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5, size = 24),
legend.title = element_blank(),
axis.line = element_line(color="black", size = 1),
axis.line.x = element_line(color = "black", size = 1),
axis.line.y = element_line(color = "black", size = 1),
axis.ticks = element_line(color = "black"), axis.title = element_text(size = 24),
panel.border = element_blank(),
axis.title.y = element_text(size = 24, margin = margin(r = 20)),
axis.title.x = element_text(size = 24, margin = margin(t = 20)),
panel.background = element_rect(fill = "white"), axis.text.x = element_text(size = 24),
axis.text = element_text(size = 24, margin = margin(r = 20), face = "bold" )
)+
scale_x_discrete(name = x_label) +
geom_vline(xintercept = c(2.5, 4.5), linetype = "dotted", color = "black") # Vertical dotted lines
# Print the plot
print(gg)
}
# Example usage
stats_list <- list(aguix_IRA_stats, dotarem_IRA_stats)
generateAngioBarsWithError(stats_list, "Signal_HU", "SAA Enhancement", "Time (min)", "Hounsfield Units (HU)",  y_breaks = c(50, 75, 100, 400 ,500, 600))
# Example usage
stats_list <- list(aguix_SAA_stats, dotarem_SAA_stats)
generateAngioBarsWithError(stats_list, "Signal_HU", "SAA Enhancement", "Time (min)", "Hounsfield Units (HU)",  y_breaks = c(50, 75, 100, 400 ,500, 600))
# Example usage
stats_list <- list(aguix_IVC_stats, dotarem_IVC_stats)
generateAngioBarsWithError(stats_list, "Signal_HU", "SAA Enhancement", "Time (min)", "Hounsfield Units (HU)",  y_breaks = c(50, 75, 100, 400 ,500, 600))
# Example usage
stats_list <- list(aguix_IRVC_stats, dotarem_IRVC_stats)
generateAngioBarsWithError(stats_list, "Signal_HU", "SAA Enhancement", "Time (min)", "Hounsfield Units (HU)",  y_breaks = c(50, 75, 100, 400 ,500, 600))
generateAngioBarsWithError <- function(stats_list, column_name, title, x_label, y_label, y_breaks) {
# Assuming Time Points are consistent across datasets
time_points <- factor(c(0.11, 0.5, 1, 3, 10)) # Convert to factor for discrete axis
#vessel_names <- c("SAA", "IRA", "IVC", "IRVC")
vessel_names <- c("AGuIX", "Dotarem")
colors <- c("SAA" = "red", "IRA" = "pink", "IVC" = "blue", "IRVC" = "lightblue","AGuIX" = "lightblue", "Dotarem" = "gold")
# Prepare data for plotting
plot_data <- expand.grid(TimePoint = time_points, Vessel = vessel_names)
plot_data$Signal <- unlist(lapply(stats_list, function(x) x$averages[[column_name]]))
plot_data$SD <- unlist(lapply(stats_list, function(x) x$std_devs[[column_name]]))
gg <- ggplot(plot_data, aes(x = TimePoint, y = Signal, fill = Vessel, group = Vessel)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.7), width = 0.6) +
geom_errorbar(aes(ymin = pmax(Signal - SD, 0), ymax = Signal + SD), width = 0.2, position = position_dodge(width = 0.7)) +
scale_fill_manual(values = colors) +
labs(title = title, x = x_label, y = y_label) +
scale_y_continuous(expand = expansion(mult = c(0.003, 0.006)), breaks = y_breaks) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5, size = 24),
legend.title = element_blank(),
axis.line = element_line(color="black", size = 1),
axis.line.x = element_line(color = "black", size = 1),
axis.line.y = element_line(color = "black", size = 1),
axis.ticks = element_line(color = "black"), axis.title = element_text(size = 24),
panel.border = element_blank(),
axis.title.y = element_text(size = 24, margin = margin(r = 20)),
axis.title.x = element_text(size = 24, margin = margin(t = 20)),
panel.background = element_rect(fill = "white"), axis.text.x = element_text(size = 24),
axis.text = element_text(size = 24, margin = margin(r = 20), face = "bold" )
)+
scale_x_discrete(name = x_label) +
geom_vline(xintercept = c(2.5, 4.5), linetype = "dotted", color = "black") # Vertical dotted lines
# Print the plot
print(gg)
}
# Example usage
stats_list <- list(aguix_IRVC_stats, dotarem_IRVC_stats)
generateAngioBarsWithError(stats_list, "Signal_HU", "SAA Enhancement", "Time (min)", "Hounsfield Units (HU)",  y_breaks = c(50, 75, 100, 400 ,500, 600))
#
print(wilcox.test(at3, dt3, paired = TRUE))
#
print(wilcox.test(at3, dt3, paired = FALSE))
#
print(wilcox.test(at1, dt1, paired = FALSE))
#
print(wilcox.test(at2, dt2, paired = FALSE))
#
print(wilcox.test(at4, dt4, paired = FALSE))
#
print(wilcox.test(at5, dt5, paired = FALSE))
# Example usage
stats_list <- list(aguix_SAA_stats, dotarem_SAA_stats)
generateAngioBarsWithError(stats_list, "Signal_HU", "SAA Enhancement", "Time (min)", "Hounsfield Units (HU)",  y_breaks = c(50, 75, 100, 400 ,500, 600))
#
print(wilcox.test(at5, dt5, paired = TRUE))
#
print(wilcox.test(at4, dt4, paired = TRUE))
#
print(wilcox.test(at3, dt3, paired = TRUE))
#
print(wilcox.test(at2, dt2, paired = TRUE))
#
ag = at1
do = dt1
print(wilcox.test(ag, do, paired = TRUE))
shapiro.test(ag, do)
shapiro.test(ag - do)
t.test(ag, do, paired = TRUE)
plot(ag)
plot(do)
#
ag = at1
do = dt1
print(wilcox.test(ag, do, paired = TRUE))
shapiro.test(ag - do)
t.test(ag, do, paired = TRUE)
#
ag = at2
do = dt2
print(wilcox.test(ag, do, paired = TRUE))
shapiro.test(ag - do)
t.test(ag, do, paired = TRUE)
plot(ag)
plot(do)
#
ag = at3
do = dt3
plot(do)
print(wilcox.test(ag, do, paired = TRUE))
shapiro.test(ag - do)
t.test(ag, do, paired = TRUE)
#
ag = at4
do = dt4
plot(do)
print(wilcox.test(ag, do, paired = TRUE))
shapiro.test(ag - do)
t.test(ag, do, paired = TRUE)
#
ag = at5
do = dt5
plot(do)
print(wilcox.test(ag, do, paired = TRUE))
shapiro.test(ag - do)
t.test(ag, do, paired = TRUE)
#plotRenalDataBars(stats_list, "Gd K-edge Renal Elimination", "Signal_Kedge", "[Gd] (mg/mL)", y_breaks = c(1:10) )
plotRenalDataBars(stats_list, "Medullary Enhancement", "Signal_HU", "Hounsfield Units (HU)", y_breaks = c(50,100, 150, 200, 250 ,500, 600))
